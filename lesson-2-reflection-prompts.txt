What happens when you initialize a repository? Why do you need to do it?
Creates a new .git hidden file in the directory. 
You need use git init.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Staging area - it is a field, between working directory and repository. If u want 
to add some bunch of files to the repo u put them into a staging area. Then "take 
snapshot" of whole amount of files there and then they go to the repo.

How can you use the staging area to make sure you have one commit per logical
change?
To check the difference between the Repo and working directory. Like a second 
check before commiting the file.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
If you want to make some risky changes or just add a feature but u don't want to 
mix it with the stable version. So you just may create a branch and do anything
you want without damaging the original.

How do the diagrams help you visualize the branch structure?
It helps me to undererstand what commit goes after another. It shows what branches
have in mutual and when starts difference.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
The result is a branch with new features but without deletions. To see it clearer.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Git autumaticly merges only if there is no conflict situations. So it's great 
that after some basic changes ( adding few lines) u don't need to merge files 
manually. Saving the time. But in most of cases u will have conflicts, so u can't 
"hide" from the manual merging. 